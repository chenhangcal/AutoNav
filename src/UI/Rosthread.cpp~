#include "Rosthread.h"



Rosthread::Rosthread()
{
  gui = NULL;
  velCount = 0;
  speed = turn = 0.0;
  keepRunning = true;
}

Rosthread::~Rosthread(void)
{

}

void Rosthread::startSystem()
{
  keepRunning = true;
  start();
}

void Rosthread::stopSystem()
{
  keepRunning = false;
  join();
}

void Rosthread::sendTakeOff()
{
  takeoff_pub.publish(std_msgs::Empty());
}

void Rosthread::sendLand()
{
  land_pub.publish(std_msgs::Empty());
}

void Rosthread::sendToggleState()
{
  toggleState_pub.publish(std_msgs::Empty());
}

void Rosthread::sendFlatTrim()
{
  flattrim_srv.call(flattrim_srv_empty);
}

void Rosthread::publishCommand(geometry_msgs::Twist cmd)
{
  vel_pub.publish(cmd);
}

void Keypress::velCB(const geometry_msgs::TwistConstPtr cmd)
{
  velCount++;
}
